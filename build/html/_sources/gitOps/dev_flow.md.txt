# 開発フロー案
## gitlabを利用した開発フロー

### 事前準備
- Wikiを利用
    - 階層構造を利用したWikiを構築することができる
    - Wikiの履歴を残すことができるので、Wikiの遍歴を理解することができる
    - 開発ルールや開発フローを整理
- Issueのラベルを作成
    - Issueが着手可能か、進捗が順調かを管理する
- マイルストーンを作成
    - 開発スケジュールに沿ったマイルストーンを設定
- Epicを作成
    - スケジュール以外の機能単位や開発フローなど、複数の観点で、階層構造を整理してEpicに落とし込む

### タスク管理
- Issueを作成する
    - Epicを紐付ける
    - MileStoneを紐づける
    - ラベルを付与する
    - テンプレートを利用してIssueの品質を担保する
- kanbanを利用してタスク状況を確認する
    - 着手したいIssueをReadyにしていく
- 状況を確認する
    - Milestoneを利用して、Issueの消化率などを確認していく
    - ロードマップを利用して、Epicやマイルストーンの進捗を管理する

### 開発
- Issueからブランチを作成する
- RVが必要な場合はDraftでMRを出しておく
    - DraftはマージできないMRを出せるので、RVを受けやすい
- コミットは細かくしておく
- Squashを利用して、細かいCommitは全て、1つにしておく
- MRを出して、IssueをCloseする
    - MRもテンプレートを利用してMRの品質を担保する

